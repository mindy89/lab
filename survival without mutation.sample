#read file
#remember to change the pathway of file = "..." depend on different device

#read temp
temp <- read.csv(file = "C:/Users/邱沛昀/Documents/Lab/data/EGFR/LUAD/temp.txt", header = F, sep = "\n", stringsAsFactor = F)
#clinical data download from TCGA-LUAD(project LUAD)
clinical <- read.csv(file = "C:/Users/邱沛昀/Documents/Lab/data/LUAD/clinical.tsv", header = T, sep = "\t", stringsAsFactor = F)
#120 miRNA from EGFR gene
for(l in 1:120){
  miR <- temp[l, 1]
  #samplesheet data download from TCGA-LUAD(project LUAD)
  samplesheet <- read.csv(file = "C:/Users/邱沛昀/Documents/Lab/data/LUAD/gdc_sample_sheet.2020-09-25.tsv", header = T, sep = "\t", stringsAsFactor = F)
  
  for(i in 1:1026){ #cases from clinical raw data
    for(j in 1:567){ #cases from samplesheet
      if(i %% 2 == 1){ #clinical raw data repeat twice, thus divided by 2
        if(clinical[i, 2] == samplesheet[j, 6]){ #if find same caseID
          #get each cases' miRNA expression
          mir <- read.csv(file = paste0("C:/Users/邱沛昀/Documents/Lab/data/LUAD/", samplesheet[j, 1], "/", samplesheet[j, 2]), header = T, sep = "\t")
          #total of 1881 miRNA
          for(k in 1:1881){
            if(mir[k, 1] == miR){
              find.row <- k
              break
            }
          }
          samplesheet[j, 5] <- mir[find.row, 2] #miRNA expression
          samplesheet[j, 4] <- clinical[i, 16] #vital status
          if(samplesheet[j, 4] == "Alive"){
            samplesheet[j, 4] <- 0
            samplesheet[j, 3] <- clinical[i, 48] #days to last follow up
          }
          else if(samplesheet[j, 4] == "Dead"){
            samplesheet[j, 4] <- 1
            samplesheet[j, 3] <- clinical[i, 10] #days to death
          }
        }
      }
    }
  }
  
  #if vital status = "0"|"'--", delete that row
  for(j in 1:2){ #the number depends on the continuous data
    for(i in 1:554){ #554 stands for the cases left. to get the exact number, simply run the fuction with 567 cases, the remain number can be observed in Environment Data(for Rstudio)
      if(samplesheet[i, 3] == "0"){
        samplesheet <- samplesheet[-i, ]
      }
      else if(samplesheet[i, 3] == "'--"){
        samplesheet <- samplesheet[-i, ]
      }
    }
  }
  
  #output
  
  #rename the name of column
  colnames(samplesheet) <- c("ID", "file.name", "days_to_last_follow_up", "vital_status", miR)
  #adjusting the column
  samplesheet[, 1] <- samplesheet[, 6]
  #removing useless columns
  for(i in 1:3){
    samplesheet[, 6] <- NULL
  }
  #output .csv
  write.csv(samplesheet, file = paste0("C:/Users/邱沛昀/Documents/Lab/data/LUAD/LUAD-EGFR/", miR, ".csv"))
  
  #read .csv
  LUAD <- read.csv(file = paste0("C:/Users/邱沛昀/Documents/Lab/data/LUAD/LUAD-EGFR/", miR, ".csv"), stringsAsFactor = F)
  #removing useless column
  LUAD <- LUAD[, -1]
  #data from survival.sample
  EGFR <- read.csv(file = paste0("C:/Users/邱沛昀/Documents/Lab/data/EGFR/new_LUAD/", miR, ".csv"), stringsAsFactor = F)
  #removing useless column
  EGFR <- EGFR[ ,-1]
  
  #run the loop below for exact number of LUAD
  ##############################################
  #count <- 0                                  #
  #for(i in 1:554){                            #
  #  for(j in 1:129){                          #
  #    if(LUAD[i, 1] == EGFR[j, 1]){           #
  #      count <- count + 1                    #
  #    }                                       #
  #  }                                         #
  #}                                           #
  #count                                       #
  ##############################################
  
  #observe the exact number of LUAD from the count loop above
  for(i in 1:425){
    for(j in 1:129){
      if(LUAD[i, 1] == EGFR[j, 1]){
        LUAD <- LUAD[-i, ]
      }
    }
  }
  #get the median of miRNA expression
  M <- median(LUAD[, 5])
  #separate miRNA expression into high and low expression group
  for(i in 1:425){
    if(LUAD[i, 5] > M){
      LUAD[i, 6] <- ("high")
    }
    else{
      LUAD[i, 6] <- ("low") 
    }
  }
  #rename the name of column
  colnames(LUAD) <- c("ID", "file.name", "days_to_last_follow_up", "vital_status", miR, "expression")
  #include lib every time you reopen R
  library("survminer")
  require("survival")
  fit <- survfit(Surv(LUAD$days_to_last_follow_up, LUAD$vital_status) ~ LUAD$expression)
  #to draw survival curve and view in plots
  #note that you might need to change data and xlim according to different miRNA/project
  ggsurvplot(fit, data = LUAD, xlim = c(0, 5000), xlab = "days to last follow up", pval = TRUE)
  #output survival curve
  output <- ggsurvplot(fit, data = LUAD, xlim = c(0, 5000), xlab = "days to last follow up", pval = TRUE, print = TRUE)
  ggsave(filename = paste0("C:/Users/邱沛昀/Documents/Lab/data/LUAD/LUAD-EGFR/LUAD-EGFR_", miR, ".png"), plot = print(output), width = 5, height = 4)
}

#user interaction. Use while running specific miRNA, not all. Remember not to run miR <- temp[l, 1]
#miR <- readline(prompt = "miRNA:")

#double check for continuous "0"|"'--"
#####################################################################
#count <- 0                                                         #
#for(i in 1:567){                                                   #
#  if(samplesheet[i, 3] == "0" || samplesheet[i, 3] == "'--"){      #
#    count <- count + 1                                             #
#  }                                                                #
#}                                                                  #
#count                                                              #
#####################################################################
